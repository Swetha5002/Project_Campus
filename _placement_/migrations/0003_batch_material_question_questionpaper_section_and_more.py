# Generated by Django 5.2 on 2025-04-18 10:09

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('_placement_', '0002_class'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, choices=[('ECE', 'Electronics and Communication Engineering'), ('CSE', 'Computer Science and Engineering'), ('ME', 'Mechanical Engineering'), ('CE', 'Civil Engineering'), ('EE', 'Electrical Engineering'), ('IT', 'Information Technology'), ('EEE', 'Electrical and Electronics Engineering'), ('AIDS', 'Artificial Intelligence and Data Science')], default='ECE', max_length=10, null=True)),
                ('end_year', models.PositiveSmallIntegerField(blank=True, choices=[(2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025), (2026, 2026), (2027, 2027), (2028, 2028), (2029, 2029)], default=2029, null=True, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2030)])),
            ],
            options={
                'verbose_name': 'Batch',
                'verbose_name_plural': 'Batches',
                'ordering': ['department', 'end_year'],
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='materials/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Material',
                'verbose_name_plural': 'Materials',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_image', models.ImageField(blank=True, null=True, upload_to='question_images/')),
                ('question_text', models.TextField()),
                ('mark', models.PositiveIntegerField(default=1)),
                ('option_A', models.TextField()),
                ('option_B', models.TextField()),
                ('option_C', models.TextField()),
                ('option_D', models.TextField()),
                ('correct_option', models.CharField(choices=[('A', 'Option A'), ('B', 'Option B'), ('C', 'Option C'), ('D', 'Option D')], default='A', help_text='Key of the correct option for MCQs.', max_length=1)),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='QuestionPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_code', models.CharField(max_length=10, unique=True)),
                ('paper_title', models.CharField(max_length=255)),
                ('paper_description', models.TextField(blank=True, null=True)),
                ('time_limit', models.PositiveIntegerField(help_text='Time limit in minutes')),
                ('no_of_qs', models.PositiveIntegerField(blank=True, null=True)),
                ('total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('is_practice_paper', models.BooleanField(default=True)),
                ('is_assessment_paper', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Question Paper',
                'verbose_name_plural': 'Question Papers',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Section',
                'verbose_name_plural': 'Sections',
                'ordering': ['batch', 'name'],
            },
        ),
        migrations.DeleteModel(
            name='Class',
        ),
        migrations.AlterModelOptions(
            name='studentresults',
            options={'verbose_name': 'Student Result', 'verbose_name_plural': 'Student Results'},
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'ordering': ['batch', 'name'], 'verbose_name': 'User', 'verbose_name_plural': 'Users'},
        ),
        migrations.RemoveIndex(
            model_name='studentresults',
            name='Dplacement__date_of_c07e18_idx',
        ),
        migrations.RemoveIndex(
            model_name='user',
            name='Dplacement__batch_y_8ad5cc_idx',
        ),
        migrations.AlterUniqueTogether(
            name='studentresults',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='user',
            name='batch_year',
        ),
        migrations.AlterField(
            model_name='studentresults',
            name='date_of_exam',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='studentresults',
            name='percentage',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=5),
        ),
        migrations.AlterField(
            model_name='studentresults',
            name='status',
            field=models.CharField(choices=[('Completed', 'Completed'), ('Malpractice', 'Malpractice')], default='Completed', max_length=20),
        ),
        migrations.AlterField(
            model_name='studentresults',
            name='test_code',
            field=models.CharField(default='', max_length=10),
        ),
        migrations.AlterField(
            model_name='studentresults',
            name='test_title',
            field=models.CharField(default='', max_length=255),
        ),
        migrations.AlterField(
            model_name='studentresults',
            name='time',
            field=models.TimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='batch',
            name='batch_admin',
            field=models.ForeignKey(blank=True, limit_choices_to={'is_superuser': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='administered_batches', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='batch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='_placement_.batch'),
        ),
        migrations.AddField(
            model_name='question',
            name='question_paper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='_placement_.questionpaper'),
        ),
        migrations.AddField(
            model_name='section',
            name='batch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='_placement_.batch'),
        ),
        migrations.AlterField(
            model_name='user',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='_placement_.section'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['batch'], name='Dplacement__batch_i_7b62be_idx'),
        ),
        migrations.RemoveField(
            model_name='studentresults',
            name='max_marks',
        ),
        migrations.RemoveField(
            model_name='studentresults',
            name='obtained_marks',
        ),
        migrations.AlterUniqueTogether(
            name='batch',
            unique_together={('department', 'end_year')},
        ),
        migrations.AddConstraint(
            model_name='section',
            constraint=models.UniqueConstraint(fields=('name', 'batch'), name='unique_section_per_batch'),
        ),
    ]
